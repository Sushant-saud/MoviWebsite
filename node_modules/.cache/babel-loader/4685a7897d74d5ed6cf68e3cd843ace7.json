{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleMovie() {\n  _s();\n\n  const {\n    id\n  } = useParams;\n  const [movie, setmovie] = useState();\n  const [isLoading, setisLoading] = useState(true);\n\n  const getMovies = async API_URL => {\n    setisLoading(true);\n\n    try {\n      const data = await fetch(API_URL);\n      const val = await data.json();\n      console.log(val);\n\n      if (val.Response === \"True\") {\n        setisLoading(false);\n        setmovie(val.Search);\n      } else {\n        setError({\n          show: true,\n          message: val.Error\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    let timerOut = setTimeout(() => {\n      getMovies(`${API_URL}&i=${query}`);\n    }, 400);\n    return () => {\n      clearTimeout(timerOut);\n    };\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(SingleMovie, \"S0XPLUI9AlOBfBiNEF7r0vzM15s=\");\n\n_c = SingleMovie;\nexport default SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"names":["React","useParams","SingleMovie","id","movie","setmovie","useState","isLoading","setisLoading","getMovies","API_URL","data","fetch","val","json","console","log","Response","Search","setError","show","message","Error","err","useEffect","timerOut","setTimeout","query","clearTimeout"],"sources":["C:/Users/Sushant/Desktop/TechNews/my-app2/src/SingleMovie.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction SingleMovie() {\r\n  const {id}=useParams;\r\n    const [movie, setmovie] = useState();\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const getMovies = async (API_URL) => {\r\n      setisLoading(true);\r\n      try {\r\n          const data = await fetch(API_URL);\r\n          const val = await data.json();\r\n          console.log(val);\r\n          if(val.Response === \"True\"){\r\n              setisLoading(false);\r\n              setmovie(val.Search);\r\n            \r\n          }\r\n          else {\r\n              setError({\r\n                  show:true,\r\n                  message:val.Error\r\n              })\r\n          }\r\n      } catch (err) {\r\n          console.log(err);\r\n      }\r\n  }\r\n  useEffect(() => {\r\n    let timerOut= setTimeout(() => {\r\n      getMovies(`${API_URL}&i=${query}`);\r\n      },400);\r\n      return ()=>{\r\n          clearTimeout(timerOut);\r\n      }\r\n     \r\n  }, [query])\r\n\r\n  return (\r\n    \r\n    <>\r\n    \r\n    </>\r\n\r\n  )\r\n}\r\nexport default SingleMovie"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB,MAAM;IAACC;EAAD,IAAKF,SAAX;EACE,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,EAAlC;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,IAAD,CAA1C;;EACA,MAAMG,SAAS,GAAG,MAAOC,OAAP,IAAmB;IACnCF,YAAY,CAAC,IAAD,CAAZ;;IACA,IAAI;MACA,MAAMG,IAAI,GAAG,MAAMC,KAAK,CAACF,OAAD,CAAxB;MACA,MAAMG,GAAG,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAlB;MACAC,OAAO,CAACC,GAAR,CAAYH,GAAZ;;MACA,IAAGA,GAAG,CAACI,QAAJ,KAAiB,MAApB,EAA2B;QACvBT,YAAY,CAAC,KAAD,CAAZ;QACAH,QAAQ,CAACQ,GAAG,CAACK,MAAL,CAAR;MAEH,CAJD,MAKK;QACDC,QAAQ,CAAC;UACLC,IAAI,EAAC,IADA;UAELC,OAAO,EAACR,GAAG,CAACS;QAFP,CAAD,CAAR;MAIH;IACJ,CAfD,CAeE,OAAOC,GAAP,EAAY;MACVR,OAAO,CAACC,GAAR,CAAYO,GAAZ;IACH;EACJ,CApBC;;EAqBFC,SAAS,CAAC,MAAM;IACd,IAAIC,QAAQ,GAAEC,UAAU,CAAC,MAAM;MAC7BjB,SAAS,CAAE,GAAEC,OAAQ,MAAKiB,KAAM,EAAvB,CAAT;IACC,CAFqB,EAEpB,GAFoB,CAAxB;IAGE,OAAO,MAAI;MACPC,YAAY,CAACH,QAAD,CAAZ;IACH,CAFD;EAIH,CARQ,EAQN,CAACE,KAAD,CARM,CAAT;EAUA,oBAEE,qCAFF;AAOD;;GA1CQzB,W;;KAAAA,W;AA2CT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}